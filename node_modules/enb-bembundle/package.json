{
  "name": "enb-bembundle",
  "version": "1.2.0",
  "scripts": {
    "test": "npm run-script jshint && npm run-script check-style",
    "jshint": "jshint .",
    "check-style": "jscs -c node_modules/enb-validate-code/jscs.json techs"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/enb-make/enb-bembundle.git"
  },
  "author": {
    "name": "Marat Dulin"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/enb-make/enb-bembundle/issues"
  },
  "homepage": "https://github.com/enb-make/enb-bembundle",
  "peerDependencies": {
    "enb": ">=0.8.45"
  },
  "devDependencies": {
    "jscs": "~1.2.4",
    "jshint": "~2.4.2",
    "enb-validate-code": "0.0.1"
  },
  "dependencies": {
    "inherit": "2.2.1",
    "vow": "0.4.3",
    "enb-borschik": "1.5.1"
  },
  "readme": "enb-bembundle [![Build Status](https://travis-ci.org/enb-make/enb-bembundle.png?branch=master)](https://travis-ci.org/enb-make/enb-bembundle)\n==========\n\nПредоставляет технологии для сборки `bembundle`-модулей.\n\ncss-chunks\n----------\n\nИз *css*-файлов по deps'ам, собирает `css-chunks.js`-файл, обрабатывая инклуды, ссылки.\n`css-chunks.js`-файлы нужны для создания bembundle-файлов или bembundle-страниц.\n\nТехнология bembundle активно используется в bem-tools для выделения из проекта\nдогружаемых кусков функционала и стилей (js/css).\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию `?.css-chunks.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов\n  (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — 'css'.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bembundle/techs/css-chunks'));\n```\n\ncss-borschik-chunks\n-------------------\n\nИз *css*-файлов по deps'ам, собирает `css-chunks.js`-файл, обрабатывая инклуды, ссылки.\nУмеет минифицировать и фризить.\n\n`css-chunks.js`-файлы нужны для создания bembundle-файлов или bembundle-страниц.\n\nТехнология bembundle активно используется в bem-tools для выделения\nиз проекта догружаемых кусков функционала и стилей (js/css).\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию `?.css-chunks.js`.\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов\n  (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *Boolean* **minify** — Минифицировать ли в процессе обработки. По умолчанию — `true`.\n* *Boolean* **freeze** — Использовать ли фризинг в процессе обработки. По умолчанию — `false`.\n* *String* **tech** — Технология сборки. По умолчанию — соответствует расширению исходного таргета.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech([ require('enb-bembundle/techs/css-borschik-chunks'), {\n  minify: true,\n  freeze: true\n} ]);\n```\n\ni18n-lang-js-chunks\n-------------------\n\nСобирает `?.js-chunks.lang.<язык>.js`-файлы на основе `?.keysets.<язык>.js`-файлов.\n\nИспользуется для локализации в JS с помощью BEM.I18N при сборке bembundle.\n\nИсходные и конечные таргеты в данный момент не настраиваются (нет запроса).\n\n**Опции**\n\n* *String* **target** — Результирующий таргет. По умолчанию — `?.js-chunks.lang.{lang}.js`.\n* *String* **lang** — Язык, для которого небходимо собрать файл.\n\n**Пример**\n\n```javascript\nnodeConfig.addTechs([\n  [ require('i18n-lang-js-chunks'), { lang: 'all' } ],\n  [ require('i18n-lang-js-chunks'), { lang: '{lang}' } ],\n]);\n```\n\njs-chunks\n---------\n\nИз *js*-файлов по deps'ам, собирает `js-chunks.js`-файл.\n`js-chunks.js`-файлы нужны для создания bembundle-файлов или bembundle-страниц.\n\nТехнология bembundle активно используется в bem-tools для выделения из проекта догружаемых\nкусков функционала и стилей (js/css).\n\n**Опции**\n\n* *String* **filesTarget** — files-таргет, на основе которого получается список исходных файлов\n  (его предоставляет технология `files`). По умолчанию — `?.files`.\n* *String* **sourceSuffixes** — суффиксы файлов, по которым строится `files`-таргет. По умолчанию — 'js'.\n* *String* **target** — Результирующий таргет. По умолчанию — `?.js-chunks.js`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTech(require('enb-bembundle/techs/js-chunks'));\n```\n\njs-bembundle-component\n-------------------\n\nСобирает `?.bembundle.js`-файл из `?.css-chunks.js` и `?.js-chunks.js`.\n\nИспользуется вместе с `deps-subtract`, `deps-provider`, `js-chunks`, `css-chunks` для построения догружаемой части функционала сайта.\n\n**Опции**\n\n* *String* **cssChunksTargets** — Имена `css-chunks.js`-таргетов, которые предоставляют CSS-чанки. По умолчанию — `[ '?.css-chunks.js' ]`.\n* *String* **jsChunksTargets** — Имена `js-chunks.js`-таргетов, которые предоставляют JS-чанки. По умолчанию — `[ '?.js-chunks.js' ]`.\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bembundle.js`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTechs([\n  [ require('enb-bembundle/techs/levels'), { levels: /* ... */ } ],\n  require('enb-bembundle/techs/files'),\n  [ require('enb-bembundle/techs/deps'), { depsTarget: 'router.tmp.deps.js' } ],\n  [ require('enb-bembundle/techs/deps-provider'), { sourceNodePath: 'pages/index', depsTarget: 'index.deps.js' } ],\n  [ require('enb-bembundle/techs/deps-subtract'), {\n    subtractWhatTarget: 'index.deps.js',\n    subtractFromTarget: 'router.tmp.deps.js',\n    depsTarget: 'router.deps.js'\n  } ],\n  require('enb-bembundle/techs/css-chunks'),\n  require('enb-bembundle/techs/js-chunks'),\n  require('enb-bembundle/techs/js-bembundle-component')\n]);\n```\n\njs-bembundle-component-i18n\n---------------------------\n\nСобирает `?.bembundle.<язык>.js`-файл из `?.css-chunks.js`,  `?.js-chunks.lang.<язык>.js` и `?.js-chunks.js`.\n\nИспользуется вместе с `deps-subtract`, `deps-provider`, `js-chunks`, `i18n-lang-js-chunks`, `css-chunks` для построения догружаемой части функционала сайта.\n\nИмена результирующих файлов в данный момент не настраиваются (нет запросов на эту функцию).\n\n**Опции**\n\n* *String* **cssChunksTargets** — Имена `css-chunks.js`-таргетов, которые предоставляют CSS-чанки. По умолчанию — `[ '?.css-chunks.js' ]`.\n* *String* **jsChunksTargets** — Имена `js-chunks.js`-таргетов, которые предоставляют JS-чанки. По умолчанию — `[ '?.js-chunks.js' ]`.\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bembundle.{lang}.js`.\n* *String* **lang** — Язык, для которого небходимо собрать файл.\n\n**Пример**\n\n```javascript\nnodeConfig.addTechs([\n  [ require('enb-bembundle/techs/levels'), { levels: /* ... */ } ],\n  require('enb-bembundle/techs/files'),\n  [ require('enb-bembundle/techs/deps'), { depsTarget: 'router.tmp.deps.js' } ],\n  [ require('enb-bembundle/techs/deps-provider'), { sourceNodePath: 'pages/index', depsTarget: 'index.deps.js' } ],\n  [ require('enb-bembundle/techs/deps-subtract'), {\n    subtractWhatTarget: 'index.deps.js',\n    subtractFromTarget: 'router.tmp.deps.js',\n    depsTarget: 'router.deps.js'\n  } ],\n  require('enb-bembundle/techs/css-chunks'),\n  require('enb-bembundle/techs/js-chunks'),\n  [ require('enb-bembundle/techs/i18n-merge-keysets'), { lang: 'all' } ],\n  [ require('enb-bembundle/techs/i18n-merge-keysets'), { lang: '{lang}' } ],\n  [ require('enb-bembundle/techs/i18n-lang-js-chunks'), { lang: 'all' } ],\n  [ require('enb-bembundle/techs/i18n-lang-js-chunks'), { lang: '{lang}' } ],\n  [ require('enb-bembundle/techs/js-bembundle-component-i18n'), { lang: '{lang}' } ]\n]);\n```\n\njs-bembundle-page\n--------------\n\nСобирает страничный `?.js`-файл из `?.css-chunks.js` и `?.js-chunks.js`.\n\nРезультирующий файл готов к догрузке кода из бандлов (JS и CSS, приходящий из бандлов, повторно не выполняется на странице).\n\n**Опции**\n\n* *String* **cssChunksTargets** — Имена `css-chunks.js`-таргетов, которые предоставляют CSS-чанки. По умолчанию — `[ '?.css-chunks.js' ]`.\n* *String* **jsChunksTargets** — Имена `js-chunks.js`-таргетов, которые предоставляют JS-чанки. По умолчанию — `[ '?.js-chunks.js' ]`.\n* *String* **target** — Результирующий таргет. По умолчанию — `?.js`.\n\n**Пример**\n\n```javascript\nnodeConfig.addTechs([\n  /* ... */\n  require('enb-bembundle/techs/css-chunks'),\n  require('enb-bembundle/techs/js-chunks'),\n  require('enb-bembundle/techs/js-bembundle-page')\n]);\n```\n\njs-bembundle-page-i18n\n----------------------\n\nСобирает страничный `?.<язык>.js`-файл из `?.css-chunks.js`,  `?.js-chunks.lang.<язык>.js` и `?.js-chunks.js`.\n\nИспользуется вместе с `deps-subtract`, `deps-provider`, `js-chunks`, `i18n-lang-js-chunks`, `css-chunks` для построения догружаемой части функционала сайта.\n\n**Опции**\n\n* *String* **cssChunksTargets** — Имена `css-chunks.js`-таргетов, которые предоставляют CSS-чанки. По умолчанию — `[ '?.css-chunks.js' ]`.\n* *String* **jsChunksTargets** — Имена `js-chunks.js`-таргетов, которые предоставляют JS-чанки. По умолчанию — `[ '?.js-chunks.js' ]`.\n* *String* **target** — Результирующий таргет. По умолчанию — `?.bembundle.{lang}.js`.\n* *String* **lang** — Язык, для которого небходимо собрать файл.\n\n**Пример**\n\n```javascript\nnodeConfig.addTechs([\n  /* ... */\n  require('enb-bembundle/techs/css-chunks'),\n  require('enb-bembundle/techs/js-chunks'),\n  [ require('enb-bembundle/techs/i18n-merge-keysets'), { lang: 'all' } ],\n  [ require('enb-bembundle/techs/i18n-merge-keysets'), { lang: '{lang}' } ],\n  [ require('enb-bembundle/techs/i18n-lang-js-chunks'), { lang: 'all' } ],\n  [ require('enb-bembundle/techs/i18n-lang-js-chunks'), { lang: '{lang}' } ],\n  [ require('enb-bembundle/techs/js-bembundle-page-i18n'), { lang: '{lang}' } ]\n]);\n```\n",
  "readmeFilename": "README.md",
  "description": "enb-bembundle [![Build Status](https://travis-ci.org/enb-make/enb-bembundle.png?branch=master)](https://travis-ci.org/enb-make/enb-bembundle) ==========",
  "_id": "enb-bembundle@1.2.0",
  "_from": "enb-bembundle@^1.0.0"
}
