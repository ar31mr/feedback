{
  "name": "bem-environ",
  "version": "1.4.0",
  "author": {
    "name": "Vladimir Varankinv",
    "email": "varankinv@yandex-team.ru",
    "url": "http://github.com/narqo"
  },
  "main": "./lib/environ.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/bem/bem-environ.git"
  },
  "readmeFilename": "README.md",
  "readme": "bem-environ\n===========\n\n[![NPM version](https://badge.fury.io/js/bem-environ.png)](http://badge.fury.io/js/bem-environ)\n\n## Usage\n\nInstall it with `npm`\n\n```\n› npm install bem-environ --save\n```\n\nIf you plan to distribute your module/library as an npm package, add `bem-environ` to `bundledDependencies` section\n(see example) in your `package.json`. This is due to every BEM library need its own copy of `bem-environ`, but `npm`\ntries to optimise packages installation.\n\n```javascript\n{\n    \"bundledDependencies\": [\"bem-environ\"]\n}\n```\n\nUpdate your project's `make.js` to extend common build process provided\nby [bem-tools](http://github.com/bem/bem-tools)\n\n```javascript\n// make.js\n\n// Initialize environ with global root path (see API section for more examples)\nvar environ = require('bem-environ')(__dirname);\n\nfunction extendMake(registry) {\n\n    // Extend common `bem make` build process with `bem-environ`'s nodes (optional)\n    environ.extendMake(registry);\n\n    registry.decl('Arch', {\n\n      // ...\n\n    });\n\n};\n\n// For compatibility with bem-tools << 1.0.0\nif (MAKE) extendMake(MAKE);\n\n// For compatibility with bem-tools >= 1.0.0\nif (module && module.exports) module.exports = extendMake;\n```\n\n### API\n\n#### environ(root | opts)\n\n`{String|Object} root | opts` — Options to declare or path to the environment root\n\nSet environment root and other options.\n\n##### Examples\n\nSet environment root only:\n\n```javascript\nvar environ = require('bem-environ')(__dirname);\n```\n\nSet environment root and other options:\n\n```javascript\nvar environ = require('bem-environ')({\n    root: __dirname,\n    libDir: 'components', // override default 'libs' directory\n    confDir: 'conf' // override default 'configs' directory\n});\n```\n\n#### extendMake(registry)\n\n`{BEM.Registry} registry` — bem-tools registry object\n\nExtend bem-tools registry object with nodes of `bem-environ`.\n\n#### getLibPath(lib, [path...])\n\n`{String} lib` — Library name\n`{String} path...` — Library internal path\n\nReturn absolute path to the library root or its files or directories.\n\n#### getLibRelPath(lib, [path...])\n\n`{String} lib` — Library name\n`{String} path...` — Library internal path\n\nReturn relative to the root path to the library root or its files or directories.\n",
  "description": "bem-environ ===========",
  "bugs": {
    "url": "https://github.com/bem/bem-environ/issues"
  },
  "_id": "bem-environ@1.4.0",
  "_from": "bem-environ@^1.4.0"
}
